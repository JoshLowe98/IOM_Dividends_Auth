<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BoolSuccess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StrExceptionMessage" Type="OutArgument(x:String)" />
    <x:Property Name="BoolCaseFound" Type="OutArgument(x:Boolean)" />
    <x:Property Name="DiConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="TiTransactionItem" Type="OutArgument(ui:QueueItem)" />
    <x:Property Name="BoolRobotToCompleteProcessing" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="DiRow" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="ArrEntities" Type="OutArgument(s:String[])" />
    <x:Property Name="BoolGetTransactionRetry" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1310,10152</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.General.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.General</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="67">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Component Name: Get Next Transaction&#xA;Description: Narrative of what tasks the component will perform&#xA;Pre Condition:&#xA;Post Condition: " DisplayName="Component" sap:VirtualizedContainerService.HintSize="1320,10087" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Get Next Transaction" Name="strComponentName" />
      <Variable x:TypeArguments="x:Boolean" Name="boolLoadRunning" />
      <Variable x:TypeArguments="x:Int32" Name="intCount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1258,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[strComponentName + &quot;: Start&quot;]" />
    <TryCatch DisplayName="Try catch" sap:VirtualizedContainerService.HintSize="1258,9640" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="1220,9412" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Pre Condition" sap:VirtualizedContainerService.HintSize="1158,487" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolPreConditionExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[IsNothing(DiConfig) = True]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Throw Exception="[New Exception (&quot;DiConfig is null/empty. Pre-condition has failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
              </If.Then>
            </If>
          </Sequence>
          <Sequence DisplayName="Do Work" sap:VirtualizedContainerService.HintSize="1158,7824" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strUsername" />
              <Variable x:TypeArguments="x:Boolean" Name="boolGetNextTransaction" />
              <Variable x:TypeArguments="x:String" Name="strQueue" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="1096,61" sap2010:WorkflowViewState.IdRef="Assign_48">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[boolGetNextTransaction]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get queue name" sap:VirtualizedContainerService.HintSize="1096,61" sap2010:WorkflowViewState.IdRef="Assign_49">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strQueue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[DiConfig("OrchestratorQueueNameAuth").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1096,92" sap2010:WorkflowViewState.IdRef="LogMessage_23" Message="[&quot;Test oder add back less X here&quot;]" />
            <If Condition="[boolGetNextTransaction]" sap:VirtualizedContainerService.HintSize="1096,4595" sap2010:WorkflowViewState.IdRef="If_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1018,4316" sap2010:WorkflowViewState.IdRef="Sequence_41">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="956,4205" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="918,3977" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="allNewQueueItems" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="618,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Start Get Transation&quot;]" />
                        <ui:GetTransactionItem Reference="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get transaction item" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="618,25" sap2010:WorkflowViewState.IdRef="GetTransactionItem_1" QueueType="[DiConfig(&quot;OrchestratorQueueNameAuth&quot;).ToString]" TransactionItem="[TiTransactionItem]" />
                        <If Condition="[TiTransactionItem is Nothing]" DisplayName="If No Transactions" sap:VirtualizedContainerService.HintSize="856,3577" sap2010:WorkflowViewState.IdRef="If_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Amend In Progress Cases to New" sap:VirtualizedContainerService.HintSize="778,3301" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="qItems" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetQueueItems Priority="{x:Null}" sap2010:Annotation.AnnotationText="Get any queue items that are in the &quot;in progress&quot; status" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="716,943" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="InProgress" QueueName="[DiConfig(&quot;OrchestratorQueueNameAuth&quot;).ToString]" Result="[qItems]">
                                <ui:GetQueueItems.Duration>
                                  <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                </ui:GetQueueItems.Duration>
                                <ui:GetQueueItems.From>
                                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                </ui:GetQueueItems.From>
                                <ui:GetQueueItems.Reference>
                                  <InArgument x:TypeArguments="x:String" />
                                </ui:GetQueueItems.Reference>
                                <ui:GetQueueItems.Skip>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.Skip>
                                <ui:GetQueueItems.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.TimeoutMS>
                                <ui:GetQueueItems.To>
                                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                </ui:GetQueueItems.To>
                                <ui:GetQueueItems.Top>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.Top>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetQueueItems>
                              <If Condition="[qItems is Nothing OR qItems.Count = 0]" sap:VirtualizedContainerService.HintSize="716,2207" sap2010:WorkflowViewState.IdRef="If_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Check Auth and Input Queue and Delay if required" sap:VirtualizedContainerService.HintSize="400,343" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:GetQueueItems Priority="{x:Null}" sap2010:Annotation.AnnotationText="Get new queue items" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="GetQueueItems_6" QueueItemStates="New" QueueName="[DiConfig(&quot;OrchestratorQueueNameAuth&quot;).ToString]" Result="[allNewQueueItems]">
                                      <ui:GetQueueItems.Duration>
                                        <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                      </ui:GetQueueItems.Duration>
                                      <ui:GetQueueItems.From>
                                        <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                      </ui:GetQueueItems.From>
                                      <ui:GetQueueItems.Reference>
                                        <InArgument x:TypeArguments="x:String" />
                                      </ui:GetQueueItems.Reference>
                                      <ui:GetQueueItems.Skip>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:GetQueueItems.Skip>
                                      <ui:GetQueueItems.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:GetQueueItems.TimeoutMS>
                                      <ui:GetQueueItems.To>
                                        <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                      </ui:GetQueueItems.To>
                                      <ui:GetQueueItems.Top>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:GetQueueItems.Top>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:GetQueueItems>
                                    <If sap2010:Annotation.AnnotationText="If no new queue items then Robot can complete processing" Condition="[allNewQueueItems.Count = 0]" sap:VirtualizedContainerService.HintSize="338,109" sap2010:WorkflowViewState.IdRef="If_29">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="602,1344" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="allNewInputQueueItems" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:GetQueueItems Priority="{x:Null}" sap2010:Annotation.AnnotationText="Get new queue items" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="540,199" sap2010:WorkflowViewState.IdRef="GetQueueItems_7" QueueItemStates="New, InProgress" QueueName="[DiConfig(&quot;OrchestratorQueueNameInput&quot;).ToString]" Result="[allNewInputQueueItems]">
                                            <ui:GetQueueItems.Duration>
                                              <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                            </ui:GetQueueItems.Duration>
                                            <ui:GetQueueItems.From>
                                              <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                            </ui:GetQueueItems.From>
                                            <ui:GetQueueItems.Reference>
                                              <InArgument x:TypeArguments="x:String" />
                                            </ui:GetQueueItems.Reference>
                                            <ui:GetQueueItems.Skip>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:GetQueueItems.Skip>
                                            <ui:GetQueueItems.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:GetQueueItems.TimeoutMS>
                                            <ui:GetQueueItems.To>
                                              <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                            </ui:GetQueueItems.To>
                                            <ui:GetQueueItems.Top>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:GetQueueItems.Top>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:GetQueueItems>
                                          <Assign sap:VirtualizedContainerService.HintSize="540,61" sap2010:WorkflowViewState.IdRef="Assign_77">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[BoolGetTransactionRetry]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[allNewInputQueueItems.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="540,893" sap2010:WorkflowViewState.IdRef="If_28">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="462,545" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="400,434" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_28" Message="[&quot;Adding 5 min delay due to existing items in Input Queue&quot;]" />
                                                  <Delay DisplayName=" Delay 5 minutes" Duration="00:05:10" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[BoolGetTransactionRetry]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_79">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[BoolRobotToCompleteProcessing]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="638,1688" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="576,1382" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[qItems]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="ui:QueueItem">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,1258" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[item.StartTransactionTime]" />
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478,92" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[item.Reference.ToString]" />
                                            <If sap2010:Annotation.AnnotationText="If the transaction time is less than an hour from the current time then postpone the transaction" Condition="[Convert.ToDateTime(item.StartTransactionTime).AddMinutes(5) &lt; DateTime.now.AddMinutes(-Convert.ToInt32(DiConfig(&quot;PostponmentTime&quot;).ToString))]" sap:VirtualizedContainerService.HintSize="478,883" sap2010:WorkflowViewState.IdRef="If_10">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,462" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;postpone transaction by 1 min - resets status to new&quot;]" />
                                                  <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[DateTime.Now.AddMinutes(1)]" DisplayName="Postpone Transaction Item" sap:VirtualizedContainerService.HintSize="338,219" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_1" TransactionItem="[item]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,203" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;don't postpone &quot; +item.StartTransactionTime.toString]" />
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <Delay VisualBasic.Settings="{x:Null}" DisplayName="Delay 1 minute 5 seconds" Duration="00:01:05" sap:VirtualizedContainerService.HintSize="576,90" sap2010:WorkflowViewState.IdRef="Delay_1">
                                      <TextExpression.Namespaces>
                                        <sco:Collection x:TypeArguments="x:String">
                                          <x:String>System.Activities</x:String>
                                          <x:String>System.Activities.Statements</x:String>
                                          <x:String>System.Activities.Expressions</x:String>
                                          <x:String>System.Activities.Validation</x:String>
                                          <x:String>System.Activities.XamlIntegration</x:String>
                                          <x:String>Microsoft.VisualBasic.Activities</x:String>
                                          <x:String>System</x:String>
                                          <x:String>System.Collections.Generic</x:String>
                                          <x:String>System.Data</x:String>
                                          <x:String>System.Diagnostics</x:String>
                                          <x:String>System.IO</x:String>
                                          <x:String>System.Linq</x:String>
                                          <x:String>System.Management.Automation</x:String>
                                          <x:String>System.Net.Mail</x:String>
                                          <x:String>System.Xml</x:String>
                                          <x:String>System.Xml.Linq</x:String>
                                          <x:String>UiPath.Library</x:String>
                                          <x:String>System.Windows.Markup</x:String>
                                        </sco:Collection>
                                      </TextExpression.Namespaces>
                                      <TextExpression.References>
                                        <sco:Collection x:TypeArguments="AssemblyReference">
                                          <AssemblyReference>System.Activities</AssemblyReference>
                                          <AssemblyReference>mscorlib</AssemblyReference>
                                          <AssemblyReference>System.Data</AssemblyReference>
                                          <AssemblyReference>System</AssemblyReference>
                                          <AssemblyReference>System.Core</AssemblyReference>
                                          <AssemblyReference>System.Management.Automation</AssemblyReference>
                                          <AssemblyReference>System.Xml</AssemblyReference>
                                          <AssemblyReference>System.Xml.Linq</AssemblyReference>
                                          <AssemblyReference>UiPath.Library</AssemblyReference>
                                          <AssemblyReference>PresentationFramework</AssemblyReference>
                                          <AssemblyReference>WindowsBase</AssemblyReference>
                                          <AssemblyReference>PresentationCore</AssemblyReference>
                                          <AssemblyReference>System.Xaml</AssemblyReference>
                                        </sco:Collection>
                                      </TextExpression.References>
                                      <sap2010:WorkflowViewState.ViewStateManager>
                                        <sap2010:ViewStateManager>
                                          <sap2010:ViewStateData sap:VirtualizedContainerService.HintSize="200,22" Id="Delay_1" />
                                        </sap2010:ViewStateManager>
                                      </sap2010:WorkflowViewState.ViewStateManager>
                                    </Delay>
                                    <ui:GetTransactionItem Reference="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get transaction item" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="576,25" sap2010:WorkflowViewState.IdRef="GetTransactionItem_2" QueueType="[DiConfig(&quot;OrchestratorQueueNameAuth&quot;).ToString]" TransactionItem="[TiTransactionItem]" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="856,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="462,192" sap2010:WorkflowViewState.IdRef="Sequence_77">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Check Auth and Input Queue and Delay if required" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:GetQueueItems Priority="{x:Null}" sap2010:Annotation.AnnotationText="Get new queue items" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="[DiConfig(&quot;OrchestratorQueueNameAuth&quot;).ToString]" Result="[allNewQueueItems]">
                                  <ui:GetQueueItems.Duration>
                                    <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                  </ui:GetQueueItems.Duration>
                                  <ui:GetQueueItems.From>
                                    <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                  </ui:GetQueueItems.From>
                                  <ui:GetQueueItems.Reference>
                                    <InArgument x:TypeArguments="x:String" />
                                  </ui:GetQueueItems.Reference>
                                  <ui:GetQueueItems.Skip>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:GetQueueItems.Skip>
                                  <ui:GetQueueItems.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:GetQueueItems.TimeoutMS>
                                  <ui:GetQueueItems.To>
                                    <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                  </ui:GetQueueItems.To>
                                  <ui:GetQueueItems.Top>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:GetQueueItems.Top>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:GetQueueItems>
                                <If sap2010:Annotation.AnnotationText="If no new queue items then Robot can complete processing" Condition="[allNewQueueItems.Count = 0]" sap:VirtualizedContainerService.HintSize="338,109" sap2010:WorkflowViewState.IdRef="If_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="602,2088" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="allNewInputQueueItems" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetQueueItems Priority="{x:Null}" sap2010:Annotation.AnnotationText="Get new queue items" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="540,943" sap2010:WorkflowViewState.IdRef="GetQueueItems_4" QueueItemStates="New, InProgress" QueueName="[DiConfig(&quot;OrchestratorQueueNameInput&quot;).ToString]" Result="[allNewInputQueueItems]">
                                        <ui:GetQueueItems.Duration>
                                          <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                        </ui:GetQueueItems.Duration>
                                        <ui:GetQueueItems.From>
                                          <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                        </ui:GetQueueItems.From>
                                        <ui:GetQueueItems.Reference>
                                          <InArgument x:TypeArguments="x:String" />
                                        </ui:GetQueueItems.Reference>
                                        <ui:GetQueueItems.Skip>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:GetQueueItems.Skip>
                                        <ui:GetQueueItems.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:GetQueueItems.TimeoutMS>
                                        <ui:GetQueueItems.To>
                                          <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                        </ui:GetQueueItems.To>
                                        <ui:GetQueueItems.Top>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:GetQueueItems.Top>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:GetQueueItems>
                                      <Assign sap:VirtualizedContainerService.HintSize="540,61" sap2010:WorkflowViewState.IdRef="Assign_68">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[BoolGetTransactionRetry]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[allNewInputQueueItems.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="540,893" sap2010:WorkflowViewState.IdRef="If_24">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="462,545" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="400,434" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_22" Message="[&quot;Adding 5 min delay due to existing items in Input Queue&quot;]" />
                                              <Delay DisplayName=" Delay 5 minutes" Duration="00:05:10" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_69">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[BoolGetTransactionRetry]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_47">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[BoolRobotToCompleteProcessing]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="922,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,303" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Failed to retrieve queue item - &quot;+exception.message]" />
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:QueueItem">[TiTransactionItem]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_42">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[TiTransactionItem is Nothing]" DisplayName="If no transaction item was retrieved log a message" sap:VirtualizedContainerService.HintSize="1096,376" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="jsonresponse" />
                    <Variable x:TypeArguments="x:Int32" Name="intStatus" />
                    <Variable x:TypeArguments="njl:JObject" Name="dObject" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtJobs" />
                    <Variable x:TypeArguments="njl:JArray" Name="JArray" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="576,61" sap2010:WorkflowViewState.IdRef="Assign_67">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[boolLoadRunning = True ANDALSO intCount &lt; 5]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="576,2065" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                    <ui:InterruptibleDoWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,1899" sap2010:WorkflowViewState.IdRef="Sequence_54">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:OrchestratorHttpRequest sap2010:Annotation.AnnotationText="Use API to check to see if the Load Job is running" DisplayName="Orchestrator HTTP Request" sap:VirtualizedContainerService.HintSize="478,300" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_3" JSONPayload="[&quot;&quot;&quot;&quot;]" Method="GET" RelativeEndpoint="[&quot;odata/Jobs?%24filter=State%20eq%20'Running'%20and%20ReleaseName%20eq%20'&quot;+DiConfig(&quot;Job Name Load&quot;).ToString+&quot;'&quot;]" Result="[jsonresponse]" StatusCode="[intStatus]">
                          <ui:OrchestratorHttpRequest.ResponseHeaders>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" />
                          </ui:OrchestratorHttpRequest.ResponseHeaders>
                          <ui:OrchestratorHttpRequest.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:OrchestratorHttpRequest.TimeoutMS>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:OrchestratorHttpRequest>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="478,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[dObject]" JsonString="[jsonresponse]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:DeserializeJson>
                        <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="478,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[JArray]" JsonString="[dObject(&quot;value&quot;).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:DeserializeJsonArray>
                        <Assign sap:VirtualizedContainerService.HintSize="478,61" sap2010:WorkflowViewState.IdRef="Assign_59">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dtJobs]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[Newtonsoft.Json.JsonConvert.DeserializeObject(of system.Data.DataTable)(JArray.ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:Annotation.AnnotationText="If the load job is running add a delay to the work process" Condition="[dtJobs.Rows.Count &gt;= 1]" sap:VirtualizedContainerService.HintSize="478,1147" sap2010:WorkflowViewState.IdRef="If_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,535" sap2010:WorkflowViewState.IdRef="Sequence_52">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_60">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[boolLoadRunning]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_19" Message="[&quot;Load job is still running. Adding delay&quot;]" />
                              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Delay_2" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_66">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[intCount + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,405" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;No More Work&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_30">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[BoolCaseFound]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_61">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[boolLoadRunning]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:InterruptibleDoWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleDoWhile>
                  <If sap2010:Annotation.AnnotationText="This is used as a failsafe to see if the Load Job has falted, then this job will throw an exception - to prevent infinite looping" Condition="[intCount &gt;= 5]" sap:VirtualizedContainerService.HintSize="576,522" sap2010:WorkflowViewState.IdRef="If_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,201" sap2010:WorkflowViewState.IdRef="Sequence_57">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw Exception="[new Exception(&quot;Load Job has halted.&quot;)]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_58">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[TiTransactionItem is Nothing]" DisplayName="If no transaction item was retrieved log a message" sap:VirtualizedContainerService.HintSize="1096,1173" sap2010:WorkflowViewState.IdRef="If_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="jsonresponse" />
                    <Variable x:TypeArguments="x:Int32" Name="intStatus" />
                    <Variable x:TypeArguments="njl:JObject" Name="dObject" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtJobs" />
                    <Variable x:TypeArguments="njl:JArray" Name="JArray" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;No More Work&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_62">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[BoolCaseFound]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="400,693" sap2010:WorkflowViewState.IdRef="Sequence_56">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:String[]" Name="arrColumns" />
                    <Variable x:TypeArguments="ss:SecureString" Name="sstrPassword" />
                    <Variable x:TypeArguments="x:String" Name="strPass" />
                    <Variable x:TypeArguments="x:String" Name="strResult" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Comment sap:VirtualizedContainerService.HintSize="338,75" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Extract specific content from queue item here" />
                  <Assign sap2010:Annotation.AnnotationText="Initialize new dictionary variable" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="Assign_63">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[DiRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Deserialize the Json object and save it in DiRow dictionary" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="338,102" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[DiRow]" JsonString="[TiTransactionItem.SpecificContent(&quot;jsonObject&quot;).ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:DeserializeJson>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;----- Got next Item &quot; + DiRow(&quot;DIV_ID&quot;).ToString + &quot; - &quot; + DiRow(&quot;Fund Name&quot;).ToString + &quot;------&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_65">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[BoolCaseFound]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <Sequence DisplayName="Less than X Items in Queue and more than 1 Robot running - stop additional robots" sap:VirtualizedContainerService.HintSize="1096,1115" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="allNewQueueItems" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetQueueItems Priority="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap:VirtualizedContainerService.HintSize="487,912" sap2010:WorkflowViewState.IdRef="GetQueueItems_5" QueueItemStates="New" QueueName="[strQueue]" Result="[allNewQueueItems]">
                <ui:GetQueueItems.Duration>
                  <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                </ui:GetQueueItems.Duration>
                <ui:GetQueueItems.From>
                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                </ui:GetQueueItems.From>
                <ui:GetQueueItems.Reference>
                  <InArgument x:TypeArguments="x:String" />
                </ui:GetQueueItems.Reference>
                <ui:GetQueueItems.Skip>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetQueueItems.Skip>
                <ui:GetQueueItems.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetQueueItems.TimeoutMS>
                <ui:GetQueueItems.To>
                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                </ui:GetQueueItems.To>
                <ui:GetQueueItems.Top>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetQueueItems.Top>
              </ui:GetQueueItems>
              <If Condition="[allNewQueueItems.Count &lt; Convert.ToInt32(DiConfig(&quot;Cutoff Queue Number Auth&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="487,52" sap2010:WorkflowViewState.IdRef="If_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="540,1270" sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="jsonresponse" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dtJobs" />
                      <Variable x:TypeArguments="x:Int32" Name="intStatus" />
                      <Variable x:TypeArguments="njl:JObject" Name="dObject" />
                      <Variable x:TypeArguments="njl:JArray" Name="JArray" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="478,61" sap2010:WorkflowViewState.IdRef="Assign_70">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtJobs]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[new system.data.DataTable]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:OrchestratorHttpRequest DisplayName="Orchestrator HTTP Request" sap:VirtualizedContainerService.HintSize="478,269" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_4" JSONPayload=" " Method="GET" RelativeEndpoint="[&quot;odata/Jobs?%24filter=State%20eq%20'Running'%20and%20ReleaseName%20eq%20'&quot;+DiConfig(&quot;Job Name Auth&quot;).ToString+&quot;'&quot;]" Result="[jsonresponse]" StatusCode="[intStatus]">
                      <ui:OrchestratorHttpRequest.ResponseHeaders>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" />
                      </ui:OrchestratorHttpRequest.ResponseHeaders>
                      <ui:OrchestratorHttpRequest.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:OrchestratorHttpRequest.TimeoutMS>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:OrchestratorHttpRequest>
                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="478,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[dObject]" JsonString="[jsonresponse]" />
                    <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="478,60" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_3" JsonArray="[JArray]" JsonString="[dObject(&quot;value&quot;).ToString]" />
                    <Assign sap:VirtualizedContainerService.HintSize="478,61" sap2010:WorkflowViewState.IdRef="Assign_71">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtJobs]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[Newtonsoft.Json.JsonConvert.DeserializeObject(of system.Data.DataTable)(JArray.ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[dtJobs.Rows.Count &gt; 1]" DisplayName="If more than 1 job running" sap:VirtualizedContainerService.HintSize="478,448" sap2010:WorkflowViewState.IdRef="If_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="If Not Lowest Value Production - Stop Job" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_67">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="strProductionRunning" />
                            <Variable x:TypeArguments="x:String" Name="strDomain" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="LocalSystemAccount" DataTable="[dtJobs]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="478,80" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Ascending" OutputDataTable="[dtJobs]" SortOrder="Ascending" />
                          <Sequence DisplayName="What Production Is Running now?" sap:VirtualizedContainerService.HintSize="478,852" sap2010:WorkflowViewState.IdRef="Sequence_64">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="strProductionRunning" />
                              <Variable x:TypeArguments="ss:SecureString" Name="sstrPassword" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="EmailCredentials" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="338,168" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[sstrPassword]" Username="[strProductionRunning]" />
                            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="EmailDomain" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="338,168" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                              <ui:GetRobotAsset.Value>
                                <OutArgument x:TypeArguments="x:String">[strDomain]</OutArgument>
                              </ui:GetRobotAsset.Value>
                            </ui:GetRobotAsset>
                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_72">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strProductionRunning]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[(strDomain+"\"+strProductionRunning.Replace(diConfig("Production Check").ToString,"")).ToUpper]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_24" Message="[&quot;Production Running&quot; +strProductionRunning]" />
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_25" Message="[&quot;Lowest Production Running&quot; +dtJobs(0).Item(&quot;LocalSystemAccount&quot;).ToString]" />
                          </Sequence>
                          <If Condition="[dtJobs(0).Item(&quot;LocalSystemAccount&quot;).ToString = strProductionRunning]" sap:VirtualizedContainerService.HintSize="478,784" sap2010:WorkflowViewState.IdRef="If_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_26" Message="[&quot;Continue Running&quot;]" />
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_73">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[boolGetNextTransaction]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,304" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_27" Message="[&quot;Job to be Stopped. Less than &quot;+DiConfig(&quot;Cutoff Queue Number Auth&quot;).TOString+&quot; items remaining&quot;]" />
                                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_74">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[boolGetNextTransaction]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_68">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_75">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[boolGetNextTransaction]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_76">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolGetNextTransaction]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
          <ui:CommentOut DisplayName="Comment out" sap:VirtualizedContainerService.HintSize="1158,677" sap2010:WorkflowViewState.IdRef="CommentOut_2">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="536,598" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Post Condition" sap:VirtualizedContainerService.HintSize="474,487" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="boolPostConditionExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[IsNothing(StrAttachmentLocation) = True ORELSE IsNothing(StrBrokerEmailAddress) = True]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Throw DisplayName="Throw" Exception="[New Exception (&quot;Broker email address/Attachment file was empty. Post-Condition has failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
                    </If.Then>
                  </If>
                </Sequence>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <Assign sap:VirtualizedContainerService.HintSize="1158,61" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[BoolSuccess]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1158,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[strComponentName + &quot;: Success&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1224,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="496,404" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[strComponentName + &quot; failed: &quot; + exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[BoolSuccess]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StrExceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strComponentName + " failed: " + exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1258,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[strComponentName + &quot;: End&quot;]" />
  </Sequence>
</Activity>