<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mvf="clr-namespace:Microsoft.VisualBasic.FileIO;assembly=Microsoft.VisualBasic.Core" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sic="clr-namespace:System.IO.Compression;assembly=System.IO.Compression.ZipFile" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BoolSuccess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StrExceptionMessage" Type="OutArgument(x:String)" />
    <x:Property Name="StrArchivePath" Type="InArgument(x:String)" />
    <x:Property Name="DtReports" Type="InArgument(sd:DataTable)" />
    <x:Property Name="DiConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="DtMasterSS" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1131,11258</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.IO.Compression</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="59">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.IO.Compression</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Component Name: Archive Files&#xA;Description: Narrative of what tasks the component will perform&#xA;Pre Condition:&#xA;Post Condition: " DisplayName="Component" sap:VirtualizedContainerService.HintSize="962,11193" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Archive Files" Name="strComponentName" />
      <Variable x:TypeArguments="x:Boolean" Name="boolArchivePathExists" />
      <Variable x:TypeArguments="x:String" Name="strArchiveStamp" />
      <Variable x:TypeArguments="x:String" Name="strFileName" />
      <Variable x:TypeArguments="s:String[]" Name="arrFilePaths" />
      <Variable x:TypeArguments="s:String[]" Name="arrFilesNamesToBeMoved" />
      <Variable x:TypeArguments="x:Boolean" Name="boolFileExists" />
      <Variable x:TypeArguments="sd:DataRow[]" Name="arrFileToArchivePaths" />
      <Variable x:TypeArguments="s:String[]" Name="arrFolders" />
      <Variable x:TypeArguments="x:String" Name="StrUPEArchiveDirectory" />
      <Variable x:TypeArguments="x:String" Name="strArchiveOpsPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="900,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[strComponentName + &quot;: Start&quot;]" />
    <TryCatch DisplayName="Try catch" sap:VirtualizedContainerService.HintSize="900,10746" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="862,10518" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Pre Condition" sap:VirtualizedContainerService.HintSize="800,617" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolPreConditionExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists Resource="{x:Null}" DisplayName="Path exists" Exists="[boolArchivePathExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[StrArchivePath]" PathType="Folder" />
            <If Condition="[boolArchivePathExists = False]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Throw Exception="[New Exception (&quot;Archive Path does not exist. Archive Files pre-condition has failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
              </If.Then>
            </If>
          </Sequence>
          <Sequence DisplayName="Do Work" sap:VirtualizedContainerService.HintSize="800,8860" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolCancelledFiles" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtCancelled" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtCompleted_Failed_Previously" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Copy Selected Input Files" sap:VirtualizedContainerService.HintSize="738,2218" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="670,92" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Archiving selected input files&quot;]" />
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DtReports]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="670,1042" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="636,926" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="index" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="574,61" sap2010:WorkflowViewState.IdRef="Assign_37">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(row("Row").ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[row(&quot;Archive&quot;).ToString = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="574,714" sap2010:WorkflowViewState.IdRef="If_29">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,435" sap2010:WorkflowViewState.IdRef="Sequence_71">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,324" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                              <TryCatch.Try>
                                <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[row(&quot;OutputFilePath&quot;).ToString + row(&quot;FileName&quot;).ToString + row(&quot;FileType&quot;).ToString]" DisplayName="Move File to Outputs" sap:VirtualizedContainerService.HintSize="334,159" sap2010:WorkflowViewState.IdRef="MoveFile_7" Overwrite="True" Path="[row(&quot;RootFilePath&quot;).ToString +row(&quot;FileName&quot;).ToString + row(&quot;FileType&quot;).ToString]" />
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,161" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_28" Message="[&quot;Could not move file.&quot;]" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_72">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <If Condition="[boolFileExists = false]" sap:VirtualizedContainerService.HintSize="670,893" sap2010:WorkflowViewState.IdRef="If_15">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,617" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolFileExists]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="PathExists_13" Path="[DtReports.Rows(1).Item(&quot;RootFilePath&quot;).ToString + DtReports.Rows(1).Item(&quot;FileName&quot;).ToString + DtReports.Rows(1).Item(&quot;FileType&quot;).ToString]" PathType="File" />
                    <If Condition="[boolFileExists]" sap:VirtualizedContainerService.HintSize="338,376" sap2010:WorkflowViewState.IdRef="If_16" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence DisplayName="OPERATIONS" sap:VirtualizedContainerService.HintSize="738,1916" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtCompanies" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="474,56" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Create Ops Directory and copy files over" />
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="474,92" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Create Ops Folder&quot;]" />
              <Assign sap:VirtualizedContainerService.HintSize="474,61" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strArchiveStamp]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.DateTime.Now.ToString("yyyy-MM-dd hhmmss")]</InArgument>
                </Assign.Value>
              </Assign>
              <Sequence DisplayName="Create Ops Location" sap:VirtualizedContainerService.HintSize="474,718" sap2010:WorkflowViewState.IdRef="Sequence_67">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="412,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strArchiveOpsPath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DiConfig("OperationsArchiveFilePath").ToString+ System.DateTime.Today.ToString("yyyy") + "\"+ System.DateTime.Today.ToString("MMMM")+ "\"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:PathExists Resource="{x:Null}" DisplayName="Path exists" Exists="[boolArchivePathExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_11" Path="[strArchiveOpsPath]" PathType="File">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:PathExists>
                <If Condition="[boolArchivePathExists = TRUE]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Ops Directory" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[strArchiveOpsPath]" />
                  </If.Else>
                </If>
              </Sequence>
              <Sequence DisplayName="Create RPA Location" sap:VirtualizedContainerService.HintSize="474,718" sap2010:WorkflowViewState.IdRef="Sequence_68">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="412,61" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[StrArchivePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[StrArchivePath+ System.DateTime.Today.ToString("yyyy") + "\"+ System.DateTime.Today.ToString("MMMM")+ "\"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:PathExists Resource="{x:Null}" DisplayName="Path exists" Exists="[boolArchivePathExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_21" Path="[strArchivePath]" PathType="File">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:PathExists>
                <If Condition="[boolArchivePathExists = TRUE]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_28">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Else>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Ops Directory" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[strArchivePath]" />
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
            <Sequence DisplayName="Move Files to TEMP FOLDER" sap:VirtualizedContainerService.HintSize="738,3750" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="boolTempFolderExists" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Create Temp Location" sap:VirtualizedContainerService.HintSize="676,770" sap2010:WorkflowViewState.IdRef="Sequence_42">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolTempFolderExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[Path.Combine (StrArchivePath, &quot;TempArchive\&quot;)]" PathType="Folder" />
                <If Condition="[boolTempFolderExists]" sap:VirtualizedContainerService.HintSize="412,409" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[Path.Combine (StrArchivePath, &quot;TempArchive\&quot;)]" />
                  </If.Then>
                </If>
                <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create temp directory" sap:VirtualizedContainerService.HintSize="412,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[Path.Combine (StrArchivePath, &quot;TempArchive\&quot;)]" />
              </Sequence>
              <Sequence DisplayName="Move output folders to temp location" sap:VirtualizedContainerService.HintSize="676,1451" sap2010:WorkflowViewState.IdRef="Sequence_44">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="variable1" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="614,61" sap2010:WorkflowViewState.IdRef="Assign_30">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrFolders]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetDirectories(DiConfig("OutputFilePath").ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="614,92" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;move output folders&quot;]" />
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap:VirtualizedContainerService.HintSize="614,1107" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[arrFolders]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="578,982" sap2010:WorkflowViewState.IdRef="Sequence_43">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="boolFolderExists" />
                          <Variable x:TypeArguments="x:String" Name="strFolderName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="516,61" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strFolderName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Path.GetFileName(item)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolFolderExists]" sap:VirtualizedContainerService.HintSize="516,90" sap2010:WorkflowViewState.IdRef="PathExists_14" Path="[item.ToString]" PathType="Folder" />
                        <If Condition="[boolFolderExists = True]" sap:VirtualizedContainerService.HintSize="516,640" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Then>
                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,364" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                              <TryCatch.Try>
                                <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="238,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="MoveDirectory" TargetType="mvf:FileSystem">
                                  <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                  <InArgument x:TypeArguments="x:String">[Path.Combine (StrArchivePath, "TempArchive\",StrFolderName)]</InArgument>
                                </InvokeMethod>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Warn" Message="[strFolderName + &quot; : Please check folder was zipped correctly and removed from outputs&quot;]" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
              <Sequence DisplayName="Move output files to temp location" sap:VirtualizedContainerService.HintSize="676,1246" sap2010:WorkflowViewState.IdRef="Sequence_41">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="510,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;move output files&quot;]" />
                <Assign sap:VirtualizedContainerService.HintSize="510,61" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[arrFilePaths]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(DiConfig("OutputFilePath").ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap:VirtualizedContainerService.HintSize="510,902" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[arrFilePaths]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="474,777" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="412,61" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Path.GetFileName(item.ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolFileExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[item.ToString]" PathType="File" />
                        <If Condition="[boolFileExists = True]" sap:VirtualizedContainerService.HintSize="412,435" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[Path.Combine(StrArchivePath, &quot;TempArchive\&quot;, strFileName)]" DisplayName="Move file" sap:VirtualizedContainerService.HintSize="334,159" sap2010:WorkflowViewState.IdRef="MoveFile_5" Path="[item.ToString]" />
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="676,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="608,192" sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Move Input file to temp location" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="484,101" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;move input file - Scheme Renewals Due&quot;]" />
                      <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolFileExists]" sap:VirtualizedContainerService.HintSize="484,99" sap2010:WorkflowViewState.IdRef="PathExists_16" Path="[DtReports(2).item(&quot;RootFilePath&quot;).ToString+DtReports(2).item(&quot;FileName&quot;).ToString+DtReports(2).item(&quot;FileType&quot;).ToString]" PathType="File" />
                      <If Condition="[boolFileExists = True]" sap:VirtualizedContainerService.HintSize="484,364" sap2010:WorkflowViewState.IdRef="If_19">
                        <If.Then>
                          <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[Path.Combine(StrArchivePath, &quot;TempArchive\&quot;, DtReports(2).item(&quot;FileName&quot;).ToString+ &quot; Original&quot;+DtReports(2).item(&quot;FileType&quot;).ToString)]" DisplayName="Move file" sap:VirtualizedContainerService.HintSize="384,167" sap2010:WorkflowViewState.IdRef="MoveFile_8" Path="[DtReports(2).item(&quot;RootFilePath&quot;).ToString+DtReports(2).item(&quot;FileName&quot;).ToString+DtReports(2).item(&quot;FileType&quot;).ToString]" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
            </Sequence>
            <Sequence DisplayName="ZIP FILE" sap:VirtualizedContainerService.HintSize="738,745" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Zip files&quot;]" />
              <InvokeMethod DisplayName="Invoke method" sap:VirtualizedContainerService.HintSize="338,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="CreateFromDirectory" TargetType="sic:ZipFile">
                <InArgument x:TypeArguments="x:String">[Path.Combine(StrArchivePath, "TempArchive\")]</InArgument>
                <InArgument x:TypeArguments="x:String">[Path.Combine(StrArchivePath, strArchiveStamp+" "+DtReports.Rows(0).Item("ProcessName").ToString +".zip")]</InArgument>
              </InvokeMethod>
              <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Path.Combine(StrArchivePath, &quot;TempArchive\&quot;)]" />
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strArchiveOpsPath+ strArchiveStamp+&quot; &quot;+DtReports.Rows(0).Item(&quot;ProcessName&quot;).ToString +&quot;.zip&quot;]" DisplayName="Copy Zip file to Ops Archive" sap:VirtualizedContainerService.HintSize="338,154" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[strArchivePath+ strArchiveStamp+&quot; &quot;+DtReports.Rows(0).Item(&quot;ProcessName&quot;).ToString +&quot;.zip&quot;]" />
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Post Condition" sap:VirtualizedContainerService.HintSize="800,617" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolPostConditionExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolPostConditionExists]" sap:VirtualizedContainerService.HintSize="412,90" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[strArchiveOpsPath+ strArchiveStamp +&quot; &quot;+DtReports.Rows(0).Item(&quot;ProcessName&quot;).ToString +&quot;.zip&quot;]" PathType="File" />
            <If Condition="[boolPostConditionExists = False]" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Throw DisplayName="Throw" Exception="[New Exception (&quot;Zip File in Operations Drive location could not be found. Post Condition has failed.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Then>
            </If>
          </Sequence>
          <Assign sap:VirtualizedContainerService.HintSize="800,61" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[BoolSuccess]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="800,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[strComponentName + &quot;: Success&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="866,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="400,403" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[strComponentName + &quot; failed: &quot; + exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[BoolSuccess]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StrExceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strComponentName + " failed: " + exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="900,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[strComponentName + &quot;: End&quot;]" />
  </Sequence>
</Activity>